import { StyleFunctionProps } from '@chakra-ui/theme-tools';
declare const _default: {
    baseStyle: {
        ':focus:not(:focus-visible)': {
            boxShadow: string;
        };
        fontWeight: string;
        borderRadius: string;
    };
    variants: {
        primary: (props: StyleFunctionProps) => any;
        'primary-on-accent': () => {
            bg: string;
            color: string;
            _hover: {
                bg: string;
            };
            _active: {
                bg: string;
            };
        };
        secondary: (props: StyleFunctionProps) => any;
        'secondary-on-accent': {
            color: string;
            borderColor: string;
            borderWidth: string;
            _hover: {
                bg: string;
            };
            _active: {
                bg: string;
            };
        };
        outline: (props: StyleFunctionProps) => {
            color: string;
            bg: string;
            _hover: {
                bg: string;
            };
            _checked: {
                bg: string;
            };
            _active: {
                bg: string;
            };
        };
        ghost: (props: StyleFunctionProps) => {
            color: string;
            _hover: {
                bg: string;
            };
            _active: {
                bg: string;
            };
            _activeLink: {
                bg: string;
            };
        };
        'ghost-on-accent': (props: StyleFunctionProps) => {
            color: string;
            _hover: {
                bg: string;
            };
            _activeLink: {
                color: string;
                bg: string;
            };
        };
        link: (props: StyleFunctionProps) => {
            color: string;
            _hover: {
                textDecoration: string;
                color: string;
            };
            _active: {
                color: string;
            };
        };
        'link-on-accent': () => {
            padding: number;
            height: string;
            lineHeight: string;
            verticalAlign: string;
            color: string;
            _hover: {
                color: string;
            };
            _active: {
                color: string;
            };
        };
    };
    sizes: {
        lg: {
            fontSize: string;
        };
        xl: {
            h: string;
            minW: string;
            fontSize: string;
            px: number;
        };
    };
};
export default _default;
//# sourceMappingURL=button.d.ts.map